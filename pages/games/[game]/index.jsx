import React from "react";
import Head from "next/head";
import dynamic from "next/dynamic";
import ItemCard from "../../../components/Cards/ItemCard";
import Link from "next/link";
const GamePage = ({ game }) => {
  return (
    <div>
      <Head>
        <title>{game.GameName}</title>
        <meta name="description" content="Generated by Collection Page" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="min-h-screen">
        {/*second section  */}
        <div className="h-[250px]  p-2 flex flex-col items-center justify-center mt-6">
          <h1 className="text-3xl  ">{game.GameName}</h1>
        </div>

        {/* all the NFTs in the collection */}
        <div className="min-h-[300px] w-full grid grid-cols-2 ">
          <div className="w-full h-full text-center ">
            <Link
              href={{
                pathname: "/flappybird",
                // query: {
                //   GameName: game.GameName,
                //   id: game.GameId,
                //   game: game.GameImg,
                //   itemId: game.GameName,
                // },
              }}
              passHref
            >
              <button className="w-[90%] h-[90%] bg-black  hover:mix-blend-overlay  text-white ">
                Free Play
              </button>
            </Link>
          </div>
          <div className="w-[90%] h-[90%] text-center">
            <Link href="">
              <button className="w-full h-full bg-black text-white ">
                Competitive Play
              </button>
            </Link>
          </div>
        </div>

        <div className="w-full flex flex-col justify-center items-center">
          <h1>Rankings</h1>
        </div>
      </div>
    </div>
  );
};

export const getServerSideProps = async ({ query, params, req }) => {
  //find collection id
  //get array of all items in collection
  //add them to item
  //render a card for each
  console.log("collection", query.game);
  console.log("collection", query.GameName);
  console.log("collectionID", query.id);

  return {
    props: {
      // item: items.find((i) => i.name === params?.collection),
      game: {
        glb: query.game,
        id: query.id,
        GameID: query.id,
        GameName: query.GameName,
      },
    },
  };
};
export default GamePage;
